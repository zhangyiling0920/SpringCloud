1、pom
eureka的jar包中就包含了ribbon

2、yml

3、启动类
@RibbonClient(name = "CLOUD-PAYMENT-SERVICE", configuration = MySelfRule.class)//这个name必须大写 因为eureka上注册的就是大写 区分大小写

4、
@Configuration
public class MySelfRule {
    @Bean
    public IRule myRule(){
        return new RandomRule();
    }
}



三、ribbon  客户端软件的负载均衡算法和服务调用 netflix
负载均衡就是将用户的请求分摊到多个服务上 从而达到系统的ha（高可用）
ribbon是进程内的lb 本地负载均衡 会在注册中心获取注册信息服务列表后缓存到jvm本地 从而在本地实现rpc远程服务调用技术
nginx是集中式的lb 服务器负载均衡 客户端所有请求会交给nginx 由其实现请求转发到服务端 负载均衡是由服务端实现的
ribbon是一个类库 集成于消费方进程 消费方通过它来获取到服务方的地址
1、先选择eureka server 优先选择负载较少的
2、从eureka server上渠道的服务注册表中选择一个地址。策略：轮询 随机 重试 根据响应时间加权（如何替换 如何自定义）
IRule：根据特定算法负载均衡
public interface IRule {
    Server choose(Object var1);//根据key选择provider server（负载均衡）

    void setLoadBalancer(ILoadBalancer var1);

    ILoadBalancer getLoadBalancer();
}
轮询 RoundRobinRule 原理
    rest接口请求数 % 服务器集群总数=调用服务器位置下标 每次服务器重启后rest接口
    每次consumer重启后rest接口计数从1开始
轮询 RoundRobinRule 源码
手写

随机 RandomRule
重试 RetryRule

eureka的jar包中就包含了ribbon
ribbon=负载均衡+restTemplate调用